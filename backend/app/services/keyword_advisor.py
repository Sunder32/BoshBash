"""
Keyword-based Emergency Advisor Service
Простой сервис для анализа чрезвычайных ситуаций на основе ключевых слов
"""
from typing import Dict, List, Any, Optional
import re
from datetime import datetime


class KeywordAdvisor:
    """Сервис анализа и советов на основе ключевых слов"""
    
    def __init__(self):
        self.keywords = self._load_keywords()
        self.priority_keywords = self._load_priority_keywords()
    
    def _load_priority_keywords(self) -> Dict[int, List[str]]:
        """Загрузка ключевых слов для определения приоритета"""
        return {
            1: [  # КРИТИЧЕСКИЙ - немедленная угроза жизни
                # Смерть и критическое состояние
                "умирает", "умер", "мертв", "труп", "не дышит", "остановилось сердце",
                "клиническая смерть", "агония", "без сознания", "кома",
                
                # Массовые жертвы
                "много пострадавших", "массовое", "десятки", "сотни", "толпа",
                "давка", "паника", "множество жертв", "много погибших",
                
                # Взрывы и обрушения
                "взрыв", "взорвалось", "обрушилось", "обвал", "завал", 
                "под завалом", "придавило", "рухнуло", "здание рушится",
                
                # Пожар с угрозой жизни
                "горим заживо", "заблокированы", "не можем выбраться", "задыхаемся",
                "дым повсюду", "окружены огнем", "выхода нет", "заперты",
                
                # Сильное кровотечение
                "фонтан крови", "артериальное", "истекает кровью", "много крови",
                "не останавливается кровь", "алая кровь бьет", "потерял много крови",
                
                # Оружие и насилие
                "стреляют", "стрельба", "автомат", "расстрел", "террор",
                "заложники", "захват", "бомба", "террористы", "взрывчатка",
                
                # Утопление
                "тонет человек", "ушел под воду", "не всплывает", "утонул",
                
                # Роды и беременность
                "роды", "рожает", "отошли воды", "преждевременные роды",
                "кровотечение при беременности",
                
                # Дети в опасности
                "ребенок не дышит", "младенец задыхается", "ребенок тонет",
                "украли ребенка", "ребенок пропал",
            ],
            
            2: [  # ВЫСОКИЙ - серьезная угроза, требует быстрого реагирования
                # Боль и травмы
                "сильная боль", "невыносимая боль", "острая боль", "боль в сердце",
                "боль в груди", "боль за грудиной",
                
                # Кровотечение
                "кровотечение", "кровь течет", "порез", "глубокая рана",
                "кровь не останавливается",
                
                # Переломы и травмы
                "перелом", "сломал", "вывих", "сотрясение", "упал с высоты",
                "сбила машина", "авария", "дтп",
                
                # Пожар
                "пожар", "горит", "огонь", "дым", "задымление", "полыхает",
                
                # Сердце
                "инфаркт", "сердечный приступ", "боль в сердце", "давит в груди",
                
                # Инсульт
                "инсульт", "перекосило лицо", "паралич", "не говорит",
                "не двигается", "онемела половина",
                
                # Нападение
                "напали", "избили", "бьют", "грабят", "нож", "угрожают ножом",
                "разбой", "грабеж", "насилие",
                
                # Аллергия
                "анафилаксия", "отек квинке", "не может дышать", "распухло горло",
                
                # Передозировка
                "передозировка", "наркотики", "отравился", "выпил яд",
            ],
            
            3: [  # СРЕДНИЙ - требует помощи, но не критично
                # Общая боль
                "болит", "боль", "ноет", "колет", "тянет", "жжет",
                
                # Температура
                "температура", "жар", "лихорадка", "озноб",
                
                # ЖКТ
                "тошнит", "рвота", "понос", "отравление", "боль в животе",
                
                # Легкие травмы
                "ушиб", "синяк", "царапина", "ссадина", "порезался",
                
                # Аллергия легкая
                "аллергия", "сыпь", "зуд", "покраснение",
                
                # Кража без насилия
                "украли", "кража", "пропал", "потерял",
                
                # Подозрительное
                "подозрительный", "странный", "следят",
            ],
            
            4: [  # НИЗКИЙ - консультация, не экстренно
                # Хронические состояния
                "хроническое", "постоянно", "уже давно", "периодически",
                
                # Общее недомогание
                "плохо себя чувствую", "слабость", "усталость",
                
                # Информационные запросы
                "как", "что делать", "посоветуйте", "подскажите",
            ],
            
            5: [  # ОЧЕНЬ НИЗКИЙ - не экстренная ситуация
                # Не критично
                "небольшая", "легкая", "чуть-чуть", "немного",
                "прошло", "уже лучше", "не так страшно",
            ]
        }
    
    def _calculate_priority(self, description: str, base_priority: int) -> int:
        """Вычисление приоритета на основе ключевых слов в описании"""
        description_lower = description.lower()
        
        # Проверяем критические ключевые слова (приоритет 1)
        for keyword in self.priority_keywords[1]:
            if keyword in description_lower:
                return 1  # Максимальный приоритет
        
        # Проверяем высокий приоритет (2)
        high_priority_count = sum(1 for keyword in self.priority_keywords[2] if keyword in description_lower)
        if high_priority_count >= 2:  # Если найдено 2+ ключевых слова высокого приоритета
            # Но проверяем, не хроническое ли это состояние
            for low_keyword in self.priority_keywords[4]:
                if low_keyword in description_lower:
                    return 3  # Хроническое = средний приоритет
            return 2  # Два признака высокого приоритета = высокий
        elif high_priority_count >= 1:
            # Проверяем на хроническое состояние
            for low_keyword in self.priority_keywords[4]:
                if low_keyword in description_lower:
                    return 3
            return 2
        
        # Проверяем низкий приоритет ПЕРЕД средним (приоритет проверки)
        for keyword in self.priority_keywords[4]:
            if keyword in description_lower:
                return 4  # Хроническое/постоянное = низкий приоритет
        
        # Проверяем очень низкий приоритет (5)
        for keyword in self.priority_keywords[5]:
            if keyword in description_lower:
                return 5  # Информационный запрос
        
        # Проверяем средний приоритет (3)
        medium_priority_count = sum(1 for keyword in self.priority_keywords[3] if keyword in description_lower)
        if medium_priority_count >= 3:
            return 2
        elif medium_priority_count >= 1:
            return min(3, base_priority)
        
        # Возвращаем базовый приоритет типа ЧС
        return base_priority
    
    def _load_keywords(self) -> Dict[str, Dict[str, Any]]:
        """Загрузка ключевых слов для каждого типа ЧС"""
        return {
            "fire": {
                "name": "Пожар",
                "keywords": [
                    # Основные термины
                    "пожар", "горит", "огонь", "дым", "задымление", "возгорание",
                    "пламя", "искры", "тушить", "горение", "пожарный", "задыхаюсь",
                    "угарный", "газ", "взрыв", "вспышка", "пепел", "жар", "тепло",
                    
                    # Разговорные выражения
                    "все в огне", "полыхает", "горим", "жарит", "запах гари",
                    "черный дым", "не могу дышать", "выгорело", "пожарище",
                    "сгорело", "обуглилось", "дымит", "тлеет", "горячо",
                    
                    # Последствия
                    "обвалилась крыша", "рухнул потолок", "стена рушится",
                    "окна лопнули", "стекла треснули", "перекрытия горят",
                    
                    # Эмоциональные
                    "помогите", "спасите", "караул", "горим заживо", "задыхаемся",
                    "не можем выбраться", "дверь не открывается", "заблокированы",
                    
                    # Источники пожара
                    "проводка", "короткое замыкание", "электричество", "розетка",
                    "удлинитель", "плита", "газ", "баллон", "печь", "камин",
                    "свечи", "окурок", "сигарета", "бензин", "керосин", "масло",
                    
                    # Объекты
                    "квартира горит", "дом горит", "лес горит", "машина горит",
                    "склад", "завод", "офис", "магазин", "гараж", "сарай",
                    
                    # Матерные выражения (реальная речь в стрессе)
                    "бл*ть горит", "п*здец пожар", "п*здец дымит", "бл*дь дым",
                    "ох*еть горит", "бл* не могу дышать", "п*зда все горит",
                    "е*ать дымит", "бл* помогите", "п*здец взорвалось"
                ],
                "priority": 1,
                "severity": "critical",
                "immediate_actions": [
                    "Немедленно покиньте здание",
                    "Закройте все двери за собой",
                    "Не используйте лифты",
                    "Позвоните 101 (пожарная служба)",
                    "Предупредите соседей",
                    "Ждите спасателей в безопасном месте"
                ],
                "required_resources": [
                    "Пожарная бригада",
                    "Спасательная техника",
                    "Медицинская помощь"
                ],
                "safety_tips": [
                    "Не возвращайтесь в горящее здание",
                    "Закройте нос и рот мокрой тканью",
                    "Передвигайтесь пригнувшись или ползком",
                    "Не открывайте окна - это усилит огонь"
                ],
                "warning": "⚠️ КРИТИЧЕСКАЯ ОПАСНОСТЬ! Действуйте немедленно!"
            },
            
            "medical": {
                "name": "Медицинская помощь",
                "keywords": [
                    # Основные симптомы
                    "боль", "сердце", "приступ", "кровь", "травма", "перелом",
                    "ранение", "обморок", "потеря сознания", "давление", "инфаркт",
                    "инсульт", "аллергия", "удушье", "дышать", "температура",
                    "рвота", "отравление", "судороги", "диабет", "беременность",
                    
                    # Боль
                    "болит грудь", "боль в сердце", "боль в животе", "головная боль",
                    "боль в спине", "острая боль", "сильная боль", "невыносимо",
                    "колет", "жжет", "давит", "тянет", "стреляет", "ноет",
                    
                    # Кровотечение
                    "кровотечение", "кровь течет", "кровь не останавливается",
                    "порез", "рана", "глубокая рана", "артериальное", "венозное",
                    "кровавый", "истекает кровью", "много крови", "алая кровь",
                    
                    # Травмы
                    "сломал руку", "сломал ногу", "вывих", "ушиб", "сотрясение",
                    "упал с высоты", "придавило", "ударился головой", "сбила машина",
                    "ожог", "обморожение", "порезался", "проткнул", "застрял",
                    
                    # Дыхание
                    "не могу дышать", "задыхаюсь", "нехватка воздуха", "хрипы",
                    "свистящее дыхание", "удушье", "захлебывается", "синеет",
                    
                    # Сознание
                    "без сознания", "не приходит в себя", "потерял сознание",
                    "не реагирует", "не отвечает", "глаза закатились", "пена изо рта",
                    
                    # Сердце
                    "инфаркт", "сердечный приступ", "боль за грудиной", "давление",
                    "высокое давление", "низкое давление", "аритмия", "тахикардия",
                    "боль отдает в руку", "боль в левой руке", "холодный пот",
                    
                    # Инсульт
                    "инсульт", "перекосило лицо", "не двигается рука", "не говорит",
                    "спутанная речь", "паралич", "онемела половина тела",
                    
                    # Беременность и роды
                    "роды", "схватки", "отошли воды", "кровотечение при беременности",
                    "преждевременные роды", "выкидыш", "беременная", "рожает",
                    
                    # Отравление
                    "отравился", "тошнит", "рвота", "понос", "съел", "выпил",
                    "химикаты", "грибы", "лекарства", "передозировка", "наркотики",
                    "алкоголь", "метанол", "яд", "крысиный яд",
                    
                    # Аллергия
                    "аллергия", "анафилаксия", "отек", "распухло", "покраснело",
                    "сыпь", "зуд", "укус", "ужалила оса", "укусила пчела",
                    
                    # Диабет
                    "диабет", "сахар", "гипогликемия", "высокий сахар", "низкий сахар",
                    "диабетическая кома", "инсулин",
                    
                    # Эпилепсия
                    "эпилепсия", "припадок", "судороги", "конвульсии", "бьется в судорогах",
                    
                    # Психическое состояние
                    "психоз", "неадекватный", "агрессивный", "суицид", "хочет покончить",
                    "пытается убить себя", "угрожает", "бредит", "галлюцинации",
                    
                    # Дети
                    "ребенок не дышит", "младенец", "ребенок задыхается",
                    "высокая температура у ребенка", "ребенок без сознания",
                    "новорожденный", "захлебнулся", "подавился",
                    
                    # Травмы на производстве
                    "придавило станком", "затянуло в механизм", "ампутация",
                    "оторвало", "размозжило", "упал со стремянки", "электротравма",
                    
                    # Утопление
                    "тонет", "захлебнулся", "достали из воды", "синий", "холодный",
                    
                    # Разговорные и эмоциональные
                    "умирает", "помогите спасите", "срочно", "очень плохо",
                    "критическое состояние", "еле дышит", "совсем плохо",
                    
                    # Матерные выражения (стресс)
                    "бл*ть больно", "п*здец болит", "бл* умирает", "п*зда сердцу",
                    "бл*дь не дышит", "п*здец кровь", "е*ать болит", "ох*еть как больно",
                    "бл* помогите", "п*здец труба", "е*аный перелом", "бл* упал"
                ],
                "priority": 1,
                "severity": "high",
                "immediate_actions": [
                    "Позвоните 103 (скорая помощь)",
                    "Обеспечьте покой пострадавшему",
                    "Не давайте воду/еду без разрешения врача",
                    "При кровотечении - наложите давящую повязку",
                    "При переломе - обездвижьте конечность",
                    "Следите за дыханием и пульсом"
                ],
                "required_resources": [
                    "Бригада скорой помощи",
                    "Реанимация (при необходимости)",
                    "Госпитализация"
                ],
                "safety_tips": [
                    "Не перемещайте пострадавшего без крайней необходимости",
                    "Держите человека в тепле",
                    "Успокаивайте пострадавшего",
                    "Запомните время начала симптомов"
                ],
                "warning": "⚠️ При остановке дыхания начинайте СЛР немедленно!"
            },
            
            "police": {
                "name": "Полиция",
                "keywords": [
                    # Преступления против личности
                    "кража", "грабеж", "напали", "угроза", "избили", "нападение",
                    "преступление", "вор", "разбой", "насилие", "похищение",
                    "драка", "стреляют", "оружие", "опасность", "террор",
                    "подозрительный", "преследуют", "домогательство",
                    
                    # Кражи и грабежи
                    "украли", "ограбили", "грабят", "воруют", "залезли",
                    "взломали", "вскрыли", "обчистили", "обокрали", "сперли",
                    "спиздили", "украли машину", "угон", "похитили",
                    "отняли сумку", "вырвали телефон", "карманники",
                    
                    # Насилие
                    "бьют", "избивают", "дерутся", "мордобой", "драка",
                    "нападают", "напали", "атакуют", "нож", "ножом угрожают",
                    "пистолет", "автомат", "стреляют", "выстрелы", "стрельба",
                    
                    # Изнасилование и домогательство
                    "изнасилование", "насилуют", "домогается", "пристает",
                    "насильник", "педофил", "трогает", "извращенец", "маньяк",
                    
                    # Похищение
                    "похитили", "украли ребенка", "пропал человек", "увезли",
                    "затолкали в машину", "насильно", "заставляют", "держат",
                    "заложники", "захват", "террористы",
                    
                    # Наркотики
                    "наркотики", "наркоманы", "торгуют наркотиками", "курят",
                    "колются", "шприцы", "дилер", "закладки", "дурь", "трава",
                    "героин", "спайс", "соли", "барыга",
                    
                    # Оружие
                    "оружие", "пистолет", "ствол", "пушка", "калаш", "автомат",
                    "граната", "взрывчатка", "бомба", "мина", "тротил",
                    "нож", "ножик", "заточка", "топор", "молоток",
                    
                    # Террор и массовые угрозы
                    "террористы", "террор", "взрыв", "заложники", "захват",
                    "бомба", "минировали", "угроза взрыва", "эвакуация",
                    
                    # Дебош и хулиганство
                    "дебош", "хулиганы", "громят", "крушат", "бьют стекла",
                    "дебоширят", "буянят", "пьяные", "алкаши", "скандал",
                    "шумят", "орут", "мешают", "угрожают",
                    
                    # Мошенничество
                    "мошенники", "развод", "обманули", "кидалово", "лохотрон",
                    "сняли деньги с карты", "взломали аккаунт", "вымогательство",
                    
                    # Домашнее насилие
                    "бьет муж", "бьет жена", "бьет отец", "домашнее насилие",
                    "избивает детей", "пьяный буянит", "угрожает убить",
                    
                    # Пропавшие
                    "пропал человек", "пропал ребенок", "не вернулся", "исчез",
                    "последний раз видели", "потерялся", "ушел и не вернулся",
                    
                    # Подозрительная активность
                    "подозрительные люди", "странно ведут себя", "следят",
                    "фотографируют", "снимают на камеру", "караулят",
                    "незнакомцы", "чужие", "подозрительная машина",
                    "темная машина", "без номеров",
                    
                    # Животные
                    "бешеная собака", "стая собак", "нападает собака",
                    "покусала собака", "опасная собака", "агрессивная",
                    
                    # ДТП с криминалом
                    "сбил и скрылся", "пьяный за рулем", "гонки", "дрифт",
                    "опасное вождение", "таранит", "погоня",
                    
                    # Разговорные выражения
                    "беспредел", "беззаконие", "менты нужны", "копы",
                    "полицаи", "вызовите полицию", "срочно полицию",
                    
                    # Матерные (реальная речь)
                    "бл*ть грабят", "п*здец бьют", "е*ать бандиты", "п*зда менты нужны",
                    "бл* стреляют", "п*здец драка", "ох*еть воры", "бл* украли",
                    "п*здец кидают", "е*ать орут", "бл* помогите", "п*зда все"
                ],
                "priority": 2,
                "severity": "high",
                "immediate_actions": [
                    "Позвоните 102 (полиция)",
                    "Переместитесь в безопасное место",
                    "Не вступайте в контакт с преступниками",
                    "Запомните приметы нарушителей",
                    "Не трогайте улики",
                    "Дождитесь прибытия полиции"
                ],
                "required_resources": [
                    "Полицейский наряд",
                    "Следственная группа",
                    "Медицинская помощь (при необходимости)"
                ],
                "safety_tips": [
                    "Ваша безопасность - главный приоритет",
                    "Не преследуйте преступников самостоятельно",
                    "Зафиксируйте все детали происшествия",
                    "Сохраняйте спокойствие"
                ],
                "warning": "⚠️ При угрозе жизни немедленно покиньте опасную зону!"
            },
            
            "water_rescue": {
                "name": "Спасение на воде",
                "keywords": [
                    # Основные
                    "тонет", "вода", "река", "озеро", "море", "бассейн", "утопление",
                    "течение", "волна", "лед", "провалился", "унесло", "не выплыть",
                    "помогите", "спасите", "тону", "захлебываюсь",
                    
                    # Водоемы
                    "в реке", "в озере", "в море", "в пруду", "в бассейне",
                    "в ванне", "в канале", "в водоеме", "в воде", "под водой",
                    
                    # Лед
                    "лед", "провалился под лед", "трещина во льду", "ледяная вода",
                    "холодная вода", "ледяная", "примерз", "не могу выбраться",
                    
                    # Течение
                    "сильное течение", "унесло течением", "не могу грести",
                    "водоворот", "омут", "быстрая вода", "порог", "водопад",
                    
                    # Состояние
                    "не плывет", "ушел под воду", "всплыл", "барахтается",
                    "кричит", "машет руками", "идет ко дну", "голова под водой",
                    "захлебнулся", "наглотался воды", "синий", "не дышит",
                    
                    # Средства
                    "лодка перевернулась", "катер", "яхта", "байдарка",
                    "плот", "матрас", "круг", "жилет", "спасжилет сорвало",
                    
                    # Наводнение
                    "наводнение", "затопило", "вода прибывает", "потоп",
                    "прорвало дамбу", "река вышла из берегов", "смыло дом",
                    
                    # Дети
                    "ребенок тонет", "ребенок упал в воду", "малыш в воде",
                    "дети купаются без присмотра",
                    
                    # Разговорные
                    "в воду упал", "свалился с моста", "сорвался с берега",
                    "не вылез", "застрял", "зацепился", "запутался", "водоросли",
                    
                    # Матерные
                    "бл*ть тонет", "п*здец утонул", "бл* в воде", "е*ать холодно",
                    "п*зда льдина", "бл* помогите", "п*здец лед", "ох*еть тонет"
                ],
                "priority": 1,
                "severity": "critical",
                "immediate_actions": [
                    "Позвоните 112 (экстренные службы)",
                    "Бросьте тонущему спасательный круг/веревку",
                    "НЕ прыгайте в воду без подготовки",
                    "Кричите, привлекайте внимание других",
                    "Если достали из воды - начните СЛР",
                    "Согрейте пострадавшего"
                ],
                "required_resources": [
                    "Спасатели на воде",
                    "Водолазная группа",
                    "Медицинская помощь"
                ],
                "safety_tips": [
                    "Не подплывайте к тонущему спереди",
                    "Используйте плавсредства для спасения",
                    "При спасении на льду - ложитесь плашмя",
                    "Вызывайте помощь до попытки спасения"
                ],
                "warning": "⚠️ КРИТИЧЕСКАЯ СИТУАЦИЯ! Счет идет на секунды!"
            },
            
            "mountain_rescue": {
                "name": "Горная спасательная",
                "keywords": [
                    "лавина", "гора", "скала", "альпинизм", "застрял", "сорвался",
                    "высота", "обрыв", "ущелье", "снег", "камнепад", "травма",
                    "не могу спуститься", "потерялся"
                ],
                "priority": 2,
                "severity": "high",
                "immediate_actions": [
                    "Позвоните 112 (экстренные службы)",
                    "Передайте точные координаты",
                    "Оставайтесь на месте, если не угрожает опасность",
                    "Подавайте световые/звуковые сигналы",
                    "Экономьте силы и тепло",
                    "Не пытайтесь спуститься самостоятельно"
                ],
                "required_resources": [
                    "Горноспасательная служба",
                    "Вертолет (при необходимости)",
                    "Альпинистское снаряжение"
                ],
                "safety_tips": [
                    "Соорудите укрытие от ветра",
                    "Используйте сигнальные средства",
                    "Не расходуйте заряд телефона",
                    "Держитесь вместе с группой"
                ],
                "warning": "⚠️ Сообщите о вашей последней известной позиции!"
            },
            
            "search_rescue": {
                "name": "Поисково-спасательная",
                "keywords": [
                    "потерялся", "заблудился", "пропал", "не могу найти",
                    "лес", "ребенок", "человек", "исчез", "поиск", "пожилой",
                    "не вышел на связь", "не вернулся"
                ],
                "priority": 2,
                "severity": "medium",
                "immediate_actions": [
                    "Позвоните 112 (экстренные службы)",
                    "Сообщите последнее известное местонахождение",
                    "Предоставьте описание одежды",
                    "Укажите особые приметы",
                    "Сообщите о состоянии здоровья",
                    "Не начинайте самостоятельные поиски в темное время"
                ],
                "required_resources": [
                    "Поисково-спасательный отряд",
                    "Кинологическая служба",
                    "Дроны/вертолет"
                ],
                "safety_tips": [
                    "Если вы потерялись - оставайтесь на месте",
                    "Подавайте световые/звуковые сигналы",
                    "Оставляйте заметные следы",
                    "Не паникуйте, экономьте силы"
                ],
                "warning": "⚠️ Время критично! Чем раньше начнется поиск, тем лучше!"
            },
            
            "ecological": {
                "name": "Экологическая угроза",
                "keywords": [
                    "химикаты", "выброс", "газ", "утечка", "загрязнение",
                    "радиация", "токсичный", "ядовитый", "испарения", "разлив",
                    "авария", "промышленность", "завод", "запах", "отравление"
                ],
                "priority": 2,
                "severity": "high",
                "immediate_actions": [
                    "Немедленно покиньте зону заражения",
                    "Двигайтесь перпендикулярно ветру",
                    "Позвоните 112 (экстренные службы)",
                    "Закройте окна и двери",
                    "Используйте средства защиты дыхания",
                    "Не трогайте подозрительные вещества"
                ],
                "required_resources": [
                    "МЧС (химическая защита)",
                    "Экологическая служба",
                    "Медицинская помощь"
                ],
                "safety_tips": [
                    "Избегайте низин - там скапливается газ",
                    "Не входите в облако/дым",
                    "Снимите загрязненную одежду",
                    "Примите душ при возможности"
                ],
                "warning": "⚠️ Экологическая опасность! Немедленно эвакуируйтесь!"
            },
            
            "general": {
                "name": "Общая ЧС",
                "keywords": [
                    "помогите", "срочно", "чрезвычайная", "авария", "катастрофа",
                    "происшествие", "беда", "sos", "спасите"
                ],
                "priority": 3,
                "severity": "medium",
                "immediate_actions": [
                    "Позвоните 112 (единая служба)",
                    "Сохраняйте спокойствие",
                    "Оцените уровень опасности",
                    "Переместитесь в безопасное место",
                    "Подробно опишите ситуацию диспетчеру",
                    "Следуйте инструкциям оператора"
                ],
                "required_resources": [
                    "Спасательная служба",
                    "Дополнительные ресурсы по необходимости"
                ],
                "safety_tips": [
                    "Не паникуйте",
                    "Помогайте другим, если это безопасно",
                    "Держите телефон заряженным",
                    "Запоминайте детали происшествия"
                ],
                "warning": "⚠️ Оставайтесь на связи со службами спасения!"
            }
        }
    
    def analyze(self, description: str) -> Dict[str, Any]:
        """
        Анализ описания ЧС и предоставление советов
        
        Args:
            description: Описание ситуации от пользователя
            
        Returns:
            Словарь с типом ЧС, приоритетом и советами
        """
        if not description:
            return self._get_default_response()
        
        description_lower = description.lower()
        
        # Подсчет совпадений для каждого типа ЧС
        matches = {}
        for emergency_type, data in self.keywords.items():
            count = 0
            matched_keywords = []
            
            for keyword in data["keywords"]:
                if keyword in description_lower:
                    count += 1
                    matched_keywords.append(keyword)
            
            if count > 0:
                matches[emergency_type] = {
                    "count": count,
                    "keywords": matched_keywords,
                    "data": data
                }
        
        # Если найдены совпадения
        if matches:
            # Выбираем тип с максимальным количеством совпадений
            best_match = max(matches.items(), key=lambda x: x[1]["count"])
            emergency_type = best_match[0]
            match_data = best_match[1]
            
            # Вычисляем динамический приоритет на основе ключевых слов
            base_priority = match_data["data"]["priority"]
            calculated_priority = self._calculate_priority(description, base_priority)
            
            return self._build_response(
                emergency_type=emergency_type,
                data=match_data["data"],
                matched_keywords=match_data["keywords"],
                confidence=min(match_data["count"] / 5.0, 1.0),  # Максимум 1.0
                calculated_priority=calculated_priority,
                description=description
            )
        
        # Если совпадений нет - возвращаем общие советы
        return self._build_response(
            emergency_type="general",
            data=self.keywords["general"],
            matched_keywords=[],
            confidence=0.3,
            calculated_priority=3,
            description=description
        )
    
    def _build_response(
        self,
        emergency_type: str,
        data: Dict[str, Any],
        matched_keywords: List[str],
        confidence: float,
        calculated_priority: int,
        description: str
    ) -> Dict[str, Any]:
        """Формирование ответа с советами"""
        
        # Определяем дополнительные типы если есть совпадения
        secondary_types = []
        for etype, edata in self.keywords.items():
            if etype == emergency_type:
                continue
            for keyword in matched_keywords:
                if keyword in edata["keywords"]:
                    secondary_types.append(edata["name"])
                    break
        
        # Определяем severity на основе приоритета
        severity_map = {
            1: "critical",
            2: "high",
            3: "medium",
            4: "low",
            5: "info"
        }
        
        return {
            "success": True,
            "detected_type": emergency_type,
            "type_name": data["name"],
            "priority": calculated_priority,  # Используем вычисленный приоритет
            "severity": severity_map.get(calculated_priority, data["severity"]),
            "confidence": round(confidence, 2),
            "matched_keywords": matched_keywords,
            "secondary_types": list(set(secondary_types)),
            "immediate_actions": data["immediate_actions"],
            "required_resources": data["required_resources"],
            "safety_tips": data["safety_tips"],
            "warning": data["warning"],
            "emergency_numbers": {
                "единая_служба": "112",
                "пожарная": "101",
                "полиция": "102",
                "скорая": "103"
            },
            "analyzed_at": datetime.utcnow().isoformat(),
            "method": "keyword_matching",
            "priority_reason": self._get_priority_reason(description, calculated_priority)
        }
    
    def _get_priority_reason(self, description: str, priority: int) -> str:
        """Возвращает объяснение, почему был установлен такой приоритет"""
        description_lower = description.lower()
        
        reasons = {
            1: [],
            2: [],
            3: [],
            4: [],
            5: []
        }
        
        # Собираем все найденные ключевые слова по уровням приоритета
        for level, keywords in self.priority_keywords.items():
            for keyword in keywords:
                if keyword in description_lower:
                    reasons[level].append(keyword)
        
        # Формируем объяснение на основе найденных ключевых слов
        if reasons[1]:
            return f"КРИТИЧЕСКАЯ СИТУАЦИЯ! Обнаружены критические признаки: {', '.join(reasons[1][:3])}"
        elif reasons[2]:
            return f"Высокий приоритет из-за: {', '.join(reasons[2][:3])}"
        elif reasons[3]:
            return f"Средний приоритет. Обнаружены признаки: {', '.join(reasons[3][:3])}"
        elif reasons[4]:
            return "Низкий приоритет. Ситуация не требует немедленного реагирования"
        elif reasons[5]:
            return "Информационный запрос"
        else:
            return f"Приоритет определен на основе типа ЧС (приоритет {priority})"
    
    def _get_default_response(self) -> Dict[str, Any]:
        """Ответ по умолчанию при пустом описании"""
        data = self.keywords["general"]
        return {
            "success": True,
            "detected_type": "general",
            "type_name": data["name"],
            "priority": 3,
            "severity": "medium",
            "confidence": 0.0,
            "matched_keywords": [],
            "secondary_types": [],
            "immediate_actions": data["immediate_actions"],
            "required_resources": data["required_resources"],
            "safety_tips": data["safety_tips"],
            "warning": "⚠️ Предоставьте описание ситуации для точного анализа",
            "emergency_numbers": {
                "единая_служба": "112",
                "пожарная": "101",
                "полиция": "102",
                "скорая": "103"
            },
            "analyzed_at": datetime.utcnow().isoformat(),
            "method": "keyword_matching"
        }
    
    def get_advice_by_type(self, emergency_type: str) -> Dict[str, Any]:
        """
        Получить советы для конкретного типа ЧС
        
        Args:
            emergency_type: Тип чрезвычайной ситуации
            
        Returns:
            Словарь с советами
        """
        if emergency_type not in self.keywords:
            emergency_type = "general"
        
        data = self.keywords[emergency_type]
        return {
            "success": True,
            "emergency_type": emergency_type,
            "type_name": data["name"],
            "priority": data["priority"],
            "severity": data["severity"],
            "immediate_actions": data["immediate_actions"],
            "required_resources": data["required_resources"],
            "safety_tips": data["safety_tips"],
            "warning": data["warning"],
            "emergency_numbers": {
                "единая_служба": "112",
                "пожарная": "101",
                "полиция": "102",
                "скорая": "103"
            }
        }


# Глобальный экземпляр сервиса
keyword_advisor = KeywordAdvisor()
